<div class="container mb-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h4 class="text-center my-4">作成済みイベント</h4>
      <div class="card-container" style="max-height: 600px; overflow-y: auto;">
        <% @events.each do |event| %>
          <div class="card mt-4 clickable-card"
          data-event-day="<%= event.event_dates.last.event_day %>"
          data-event-end-time="<%= event.event_dates.last.end_time %>"
          >
            <div class="card-header">
              <div class="d-flex justify-content-between">
                <div>
                  <h5><%= event.name %></h5>
                  <strong>住所：</strong><p class="ms-5"><%= event.address %></p>
                </div>
                <div>
                  <div class="dropdown d-inline">
                    <a class="btn btn-primary dropdown-toggle float-end" href="#" data-toggle="dropdown"></a>
                    <div class="dropdown-menu dropdown-menu-right">
                      <%= link_to "詳細", event, class: "dropdown-item text-primary" %>
                      <%= link_to "編集",edit_event_path(event.id),class: "dropdown-item text-primary" %>
                    <%= link_to "削除",event, method: :delete, data: { confirm: "本当に削除しますか？" },class: "dropdown-item text-danger" %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="card-body">
              <ul class="list-group">
                <% event.event_dates.each_with_index do |date, i| %>
                  <li class="list-group-item event-date-container">
                    <strong><%= event.event_dates.count <= 1 ? "日付：" : "#{i + 1}. 開催日：" %></strong>
                    <%= date.event_day.strftime('%Y-%m-%d') %>
                    <br>
                    <strong>開催時刻：</strong>
                    <%= date.start_time.strftime('%H:%M') %>〜<%= date.end_time.strftime('%H:%M') %>
                  </li>
                <% end %>
              </ul>
              <% if event.image.present?%>
                <p class="image-info text-primary mt-3" data-toggle="modal" data-target="#imageModal" data-image-url="<%= event.image.url %>" data-image-description="<%= event.name %>の画像">
                  画像を表示する
                </p>
              <% end %>
              <p class="card-text mt-3"><strong>イベント詳細：</strong><%= event.introduction %></p>
            </div>
              <p class="text-danger ps-2 event-past-message">※開催済みのイベントです</p>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header justify-content-end">
        <button type="button" class="close btn btn-danger" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body text-center">
        <img id="modalImage" class="img-fluid" src="" alt="画像" style="max-width: 100%; max-height: 80vh;">
        <p id="imageDescription"></p>
      </div>
    </div>
  </div>
</div>

<script>
  const currentDateTime = new Date();
  document.addEventListener("turbolinks:load", function() {
    updateEventMessages()
  });
  function updateEventMessages() {
    const clickableCards = document.querySelectorAll(".clickable-card");

    clickableCards.forEach(function(card){
      const pastEventMessage = card.querySelector(".event-past-message");
      const pastEventList = card.querySelectorAll(".event-date-container");
      const eventDate = new Date(card.getAttribute("data-event-day"));
      const startTime = new Date(card.getAttribute("data-event-start-time"));
      const endTime = new Date(card.getAttribute("data-event-end-time"));

      if(pastEvent(eventDate, currentDateTime, endTime)){
        card.classList.add("text-muted");
        pastEventMessage.classList.add("visible");
        pastEventList.forEach(item => item.classList.add("text-muted"));
      } else {
        pastEventMessage.classList.add("invisible");
      }
    });
  }
  function pastEvent(eventDate, currentDateTime, endTime) {
    return eventDate < currentDateTime || isSameDay(eventDate, currentDateTime) && isTimePast(endTime, currentDateTime);
  }
  function isSameDay(date1, date2) {
    return (
      date1.getFullYear() === date2.getFullYear() &&
      date1.getMonth() === date2.getMonth() &&
      date1.getDate() === date2.getDate()
    );
  }
  function isTimePast(time1, time2) {
    return time1.getHours() < time2.getHours() || (time1.getHours() === time2.getHours() && time1.getMinutes() < time2.getMinutes());
  }

  document.addEventListener("DOMContentLoaded", function() {
    const imageInfoElements = document.querySelectorAll(".image-info");

    imageInfoElements.forEach(element => {
      element.addEventListener("click", function() {
        const imageUrl = element.getAttribute("data-image-url");
        const imageDescription = element.getAttribute("data-image-description");
        const modalImage = document.getElementById("modalImage");
        const imageDescriptionElement = document.getElementById("imageDescription");

        modalImage.src = imageUrl;
        imageDescriptionElement.textContent = imageDescription;
      });
    });
  });
</script>
