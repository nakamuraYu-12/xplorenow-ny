version: 2.1
orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  heroku: circleci/heroku@1.2.3
  browser-tools: circleci/browser-tools@1.4.1

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - run:
          name: confirmation
          command: |
            pwd
            ls
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  rubocop:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:
          PMYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
    working_directory: ~/xplorenow/src
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: run rubocop
          command: bundle exec rubocop
  test:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/xplorenow/src
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: rails db:migrate
          command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Rspec
          command: bundle exec rspec
  deploy:
    docker:
      - image: circleci/ruby:2.7
    steps:
      - checkout
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: Deploy to Heroku_Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PRD.git main
      - run:
          name: db migration
          command: |
            heroku run rails db:migrate --app ${HEROKU_APP_NAME_PRD}
workflows:
  version: 2
  build_and_rubocop_and_test:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - test:
          requires:
            - build
  deploy:
    jobs:
      - deploy:
          filters:
              branches:
                  only:
                  - main
